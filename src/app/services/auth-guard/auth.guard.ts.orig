import { Injectable } from "@angular/core";
import {
  CanActivate,
  ActivatedRouteSnapshot,
  RouterStateSnapshot,
  Router
<<<<<<< HEAD
} from "@angular/router";
import { Observable } from "rxjs";
import { AuthenticationService } from "../authentication-service/authentication.service";
import { DashboardService } from "../dashboard-service/dashboard.service";
import { getConsoByCategory } from "src/app/dashboard";
import { USER_CONS_CATEGORY_CALL, SargalStatusModel } from "src/shared";
import { SargalService } from "../sargal-service/sargal.service";

@Injectable({
  providedIn: "root"
=======
} from '@angular/router';
import { Observable } from 'rxjs';
import { AuthenticationService } from '../authentication-service/authentication.service';
import { DashboardService } from '../dashboard-service/dashboard.service';
import { getConsoByCategory } from 'src/app/dashboard';
import { USER_CONS_CATEGORY_CALL } from 'src/shared';

@Injectable({
  providedIn: 'root'
>>>>>>> 18c972bf8ef0adf90842e96bcc18276f8118b261
})
export class AuthGuard implements CanActivate {
  currentProfil;

  constructor(
    private authServ: AuthenticationService,
    private router: Router,
<<<<<<< HEAD
    private dashboardService: DashboardService,
    private sargalService: SargalService
=======
    private dashboardService: DashboardService
>>>>>>> 18c972bf8ef0adf90842e96bcc18276f8118b261
  ) {}
  canActivate(
    next: ActivatedRouteSnapshot,
    state: RouterStateSnapshot
  ): Observable<boolean> | Promise<boolean> | boolean {
    const userHasLogin = !!this.authServ.getToken();
    const currentPhoneNumber = this.dashboardService.getCurrentPhoneNumber();
    if (!userHasLogin) {
      if (
<<<<<<< HEAD
        state.url === "/login" ||
        state.url === "/home" ||
        state.url === "/register"
      ) {
        return true;
      }
      this.router.navigate(["/"]);
      return false;
    } else {
      if (
        state.url === "/login" ||
        state.url === "/home" ||
        state.url === "/register"
      ) {
        this.router.navigate(["/dashboard"]);
        return false;
      }
      if (
        state.url === "/dashboard/all-my-conso/transfert-credit" ||
        state.url === "/transfer/credit-pass"
=======
        state.url === '/login' ||
        state.url === '/home' ||
        state.url === '/register'
      ) {
        return true;
      }
      this.router.navigate(['/']);
      return false;
    } else {
      if (
        state.url === '/login' ||
        state.url === '/home' ||
        state.url === '/register'
      ) {
        this.router.navigate(['/dashboard']);
        return false;
      }
      if (
        state.url === '/dashboard/all-my-conso/transfert-credit' ||
        state.url === '/transfer/credit-pass'
>>>>>>> 18c972bf8ef0adf90842e96bcc18276f8118b261
      ) {
        this.dashboardService
          .getUserConsoInfosByCode([1, 2, 6])
          .subscribe((res: any) => {
            const myconso = getConsoByCategory(res)[USER_CONS_CATEGORY_CALL];
            let solde = 0;
            let soldebonus = 0;
            if (myconso) {
              myconso.forEach(x => {
                if (x.code === 1) {
                  solde += Number(x.montant);
                } else if (x.code === 2 || x.code === 6) {
                  soldebonus += Number(x.montant);
                }
              });
              if (solde < 489 && !(solde > 20 && soldebonus > 1)) {
<<<<<<< HEAD
                this.router.navigate(["/dashboard"]);
=======
                this.router.navigate(['/dashboard']);
>>>>>>> 18c972bf8ef0adf90842e96bcc18276f8118b261
                return false;
              }
            }
          });
      }
<<<<<<< HEAD
      if (state.url === "/sargal-status-card") {
        this.sargalService.getCustomerSargalStatus().subscribe(
          (statusResponse: SargalStatusModel) => {
            return true;
          },
          err => {
            if (err.status && err.status === 400) {
              this.router.navigate(["/dashboard"]);
              return false;
            }
            return true;
          }
        );
      }
      // this.authServ
      //   .getSubscription(currentPhoneNumber)
      //   .subscribe((res: any) => {
      //     this.currentProfil = res.profil;
      //     if (
      //       (state.url === '/formules-and-options/my-formule' ||
      //         state.url === '/dashboard/my-formule-desktop') &&
      //       (this.currentProfil !== 'PREPAID' &&
      //         this.currentProfil !== 'Ligne Fixe')
      //     ) {
      //       this.router.navigate(['/dashboard']);
      //     }
      //     return false;
      //   });
=======
>>>>>>> 18c972bf8ef0adf90842e96bcc18276f8118b261
      return true;
    }
  }
}
